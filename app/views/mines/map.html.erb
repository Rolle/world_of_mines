<div class="container bs-docs-container">
    <div class="row">
        <div class="col-md-12" role="main">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3>Karte</b></h3>
                </div>
                <div class="panel-body">
                  <div class="form-inline form-group">
                  <% if current_user.user? %>
                    <%= link_to 'Neuer Eintrag', '#', onclick: "showNew()", data: {no_turbolink: true}, class: "btn btn-primary" %>
                  <% end %>
                    <% if current_user.admin? %>
                      <%= link_to 'Export', export_work_list_mines_path, remote: true, class: "btn btn-primary", id: "export-link" %>
                    <% end %>
                    <%= label_tag "Typ: "%> 
                    <%= select_tag :sort, options_for_select(MinesHelper::SORTS_ALL), :class=>"input-small form-control", :onchange => 'select_typ(this.value)' %>
                    <%= label_tag "Zustand: "%> 
                    <%= select_tag :state, options_for_select(MinesHelper::STATES_ALL), :class=>"input-small form-control", :onchange => 'select_zustand(this.value)' %>
                  </div>
                  <div id ="map" style="width:auto; height: 700px;"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<%=render(:partial => 'new', locals: {mine: @new_mine, photo: @new_photo}) %>

<div id='popup'>
</div>


<script type='text/javascript'>   
    <% if Rails.env.production? %>
            L.Icon.Default.imagePath = '';
    <% else %>
            L.Icon.Default.imagePath = 'assets';
    <% end %>
    
    //Array Ã¼ber alle Punkte:
    // <lat,long,Label,id,status,typ
    <% oZ = -1 %>
    var addressPoints = [
      <%@mines.each do |mine| %>
          <% oZ = oZ + 1 %>
          [<%=(mine.latitude + oZ).to_s%>,<%=(mine.longitude - oZ).to_s%>,"<%=mine.id.to_s + " - " + mine.name + " ("+sort_of_text(mine.sort)+")" %>", <%=mine.id.to_s%>, <%= state(mine) %>, <%=sort(mine)%>],
      <% end %>
    ]
    var markersId = {};
    var markers = L.markerClusterGroup({ disableClusteringAtZoom: 15, chunkedLoading: true });
    for (var i = 0; i < addressPoints.length; i++) {
      var a = addressPoints[i];
      var m = L.marker(L.latLng(a[0]-i, a[1]+i), { title: a[2], icon: iconForSort(a[5])});
      m._popup_id = a[3];
      <% if current_user.user? %>
        m.on('click', onClick);
      <% end %>
      markers.addLayer(m);
      markersId[a[3]] = m;
    }

    map = new L.Map('map', {
      fullscreenControl: true
    });    
    map.addLayer(markers);
    var osmGeocoder = new L.Control.OSMGeocoder();
    map.addControl(osmGeocoder);

    var osmde = L.tileLayer.provider('OpenStreetMap.DE');
    var opentopo = L.tileLayer.provider('OpenTopoMap');
    var bing = new L.BingLayer("ApiJPrwDWWqUlXoy7gg460DQBa55V-i1XqWWQfnf1sz5HW4CfxUkBZ7afjaMtQ5W");
    var thunder = new L.TileLayer('https://{s}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png');
    

    var baseMaps = {
            "Bing": bing,
            "OSM DE": osmde,
            "OpenTopo": opentopo,
            "Thunder" : thunder
    };
    L.control.layers(baseMaps).addTo(map);    
    map.addLayer(thunder);


    L.Control.fileLayerLoad({
        layerOptions: {style: {color:'red'}},
        addToMap: true,
        fileSizeLimit: 2048,
        formats: [
            '.geojson',
            '.kml',
            '.gpx'
        ]
    }).addTo(map);

    
    <% if @mine.nil? %>
      if ($.cookie('map.lat') != undefined && $.cookie("map.lng") != undefined && $.cookie("map.zoomlevel") != undefined) {
        map.setView(new L.LatLng($.cookie('map.lat'),$.cookie("map.lng")), $.cookie("map.zoomlevel"));      
      } else {
        map.setView(new L.LatLng(49.77477900007886,6.80334), 12);      
      }
    <% else %>
      map.setView(new L.LatLng(<%= @mine.latitude.to_s %>,<%= @mine.longitude.to_s %>), 15);
    <% end %> 

    <% if current_user.user? %>
      map.on('click', addMarker);
      <% if current_user.superadmin? %>
        map.on('zoomend', function() {
          changeBoundsOnLink("export-link",map.getBounds());
        });
        map.on('dragend', function() {
          changeBoundsOnLink("export-link",map.getBounds());
        });
      <% end %>
    <% else %>
      map.on('zoomend', function() {
        changeBoundsCookie(map.getBounds());
      });
      map.on('dragend', function() {
        changeBoundsCookie(map.getBounds());
      });
      map.options.maxZoom = 12;
      map.options.minZoom = 9;
    <% end %>    

    <% if current_user.admin? %>
      changeBoundsOnLink("export-link",map.getBounds());
    <% end %>
    
    enable_top_menu("karte");
</script> 

